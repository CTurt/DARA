	.global _start
_start:

@ FIFA11 Starts in thumb mode
.ifdef FIFA11E
	.thumb
	
	@ Make sure you have an even amount of thumb instructions, or pad with 0xff to avoid 0x00 padding
	
	ldr r1, =pay
	bx r1
.endif

#define MODE_FB0 0x00020000
#define VRAM_ENABLE 0x80
#define VRAM_A_LCD 0
#define VRAM_A 0x06800000

	.global pay
pay:
	.arm
	
	@ mov r11, r11							@ Optional NO$GBA breakpoint
	
	mov r2, #MODE_FB0						@ Use VRAM_A as framebuffer
	mov r3, #(VRAM_ENABLE | VRAM_A_LCD)		@ VRAM bank A enabled in LCD mode
	eor r4, r4								@ Full brightness (some games fade out before our code)
	
	@ FIFA 11 cannot have any 0 bytes
	.ifdef FIFA11E
	ldr r0, =(0x04000000 - 4)				@ I/O space offset
	mov r1, #0x3							@ Both screens on
	
	str r1, [r0, #(0x304 + 4)]				@ Set POWERCNT
	str r2, [r0, #(0x00 + 4)]				@		DISPCNT
	str r3, [r0, #(0x240 + 4)]				@		VRAMCNT_A
	str r4, [r0, #(0x6C + 4)]				@		MASTER BRIGHT
	.endif
	
	.ifndef FIFA11E
	mov r0, #0x04000000						@ I/O space offset
	mov r1, #0x3							@ Both screens on
	
	str r1, [r0, #0x304]					@ Set POWERCNT
	str r2, [r0]							@		DISPCNT
	str r3, [r0, #0x240]					@		VRAMCNT_A
	str r4, [r0, #0x6C]						@		MASTER BRIGHT
	.endif
	
	reset:
	add r1, #31								@ Next colour
	mov r0, #VRAM_A							@ VRAM A offset, framebuffer
	mov r2, #(256 * 192)					@ Pixel count
	
	writePixel:
	strh r1, [r0], #2						@ Write a pixel
	subs r2, r2, #1							@ Move along one
	bne writePixel							@ Fill whole screen
	
	b reset
